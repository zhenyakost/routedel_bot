const { Telegraf } = require("telegraf");
const TOKEN = process.env.BOT_TOKEN;
const bot = new Telegraf(TOKEN);
const axios = require('axios');
const { initializeApp } = require("firebase/app");
const { getDatabase, ref, child, get } = require('firebase/database');

const firebaseConfig = {
  databaseURL: "https://routedel-e99a9-default-rtdb.firebaseio.com",
};

const app = initializeApp(firebaseConfig);

const database = getDatabase(app);

bot.start((ctx) =>
  ctx.reply(`–ü—Ä–∏–≤—ñ—Ç, —Ü–µ —Å–µ—Ä–≤—ñ—Å OrderFood üòã
–ó–∞–º–æ–≤–ª—è–π —Ç–æ–≤–∞—Ä–∏ –æ–Ω–ª–∞–π–Ω —Ç–∞ –æ—Ç—Ä–∏–º—É–π —ó—Ö —É –º—ñ—Å—Ü—ñ –¥–µ —î –∫—É—Ä‚Äô—î—Ä.`)
);

bot.on('pre_checkout_query', (ctx) => ctx.answerPreCheckoutQuery(true)) // –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ –æ–ø–ª–∞—Ç–µ

bot.on('successful_payment', async (ctx, next) => {
  let order_id = 0;
  const snapshot = await get(child(ref(database), 'orders/'));
  if(snapshot.exists()){
    const obj = snapshot.val();
    order_id = Object.keys(obj).reverse().find(a => obj[a].user_id === ctx.chat.id)
  }
  await ctx.reply(`–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ${order_id}.
–î–∞–ª—ñ –ø—Ä–æ—Å—Ç–æ –ø—ñ–¥—ñ–π–¥—ñ—Ç—å –¥–æ –∫—É—Ä‚Äô—î—Ä–∞ –∑ —Ü–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ —Å–≤–æ—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üòå`)
  .then(get(child(ref(database), `orders/${order_id}`)).then(snapshot => {
    const obj = snapshot.val();
    axios.post(`https://api.telegram.org/bot${TOKEN}/sendMessage`, JSON.stringify({
    'chat_id':'-1001609321370',
    'text':`–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: <b>${order_id}</b>
–Ü–º º—è: ${obj.user_name},
–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:
   ${obj.goods.map((a, i) => `${a} x${obj.quant[i]} \n   `).join('')}`,
   'parse_mode':'html'
  }), {headers: {'Content-Type':'application/json'}})}))
})

bot.launch();

exports.handler = async (event) => {
    await bot.handleUpdate(JSON.parse(event.body));
    return { statusCode: 200, body: '' };
};